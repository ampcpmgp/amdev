# process.chdir("../../")
fs =require("fs")
path = require("path")
webpack = require("webpack")

nodeModules = {}
fs.readdirSync('node_modules')
  .filter((x) =>
    ['.bin'].indexOf(x) is -1
  ).forEach((mod) =>
    nodeModules[mod] = 'commonjs ' + mod
  )

compiler = webpack(
  entry:
    "browser/build/start": "./browser/start.coffee"
  output:
    path: path.resolve()
    filename: "[name].js"
  externals: nodeModules
  module:
    loaders: [
      {test: /\.coffee$/, loader: "coffee-loader"}
    ]
  target: "electron",
  devtool: "inline-source-map"
  resolve:
    modulesDirectories: ["_node_modules", "node_modules"]
    extensions: ["", ".webpack.js", ".web.js", ".js", ".coffee"]
  # plugins: [new webpack.IgnorePlugin(/bin\/coffee$/)]
)
compiler.watch(
  (err, stats) =>
    return console.log(err) if (err)
    jsonStats = stats.toJson()
    console.log stats.toString(
      colors: true
      assets: false
      version: false
      hash: false
      timings: false
      chunkModules: false
    )
    return if(jsonStats.errors.length > 0)
    # if(jsonStats.warnings.length > 0)
)
